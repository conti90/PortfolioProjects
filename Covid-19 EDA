SELECT *
FROM dbo.CovidDeaths
WHERE continent is not null
Order by 3,4

--SELECT *
--FROM dbo.CovidVaccinations
--Order by 3,4
-- Select Data that we are going to be using


Select Location, date, total_cases, new_cases, total_deaths, population
From dbo.CovidDeaths
WHERE continent is not null
Order by 1,2


-- Looking at Total Cases vs Total Deaths
-- Shows the likelihood of dying if you contract covid in your country


Select Location, date, total_cases, total_deaths,
(CONVERT(float,total_deaths)/NULLIF(CONVERT(float,total_cases),0))*100 AS DeathPercentage
From dbo.CovidDeaths
WHERE Location like '%states%'
ORDER By 1,2 DESC


-- Looking at Total Cases vs Population
-- Shows what percentage of population got Covid


Select Location, date, total_cases, population,
(CONVERT(float,total_cases)/NULLIF(CONVERT(float,population),0))*100 AS CaseFrequency
From dbo.CovidDeaths
--WHERE Location like '%states%'
ORDER By 1,2 DESC


-- Looking at Countries with Highest Infection Rate compared to Population


Select Location, population, MAX(total_cases) as HighestInfectionCount,
MAX((CONVERT(float,total_cases)/NULLIF(CONVERT(float,population),0)))*100 AS PercentPopulationInfected
From dbo.CovidDeaths
--WHERE Location like '%states%'
WHERE continent is not null
GROUP BY Location, Population
ORDER By 4 DESC


-- Showing Countries with Highest Death Count per Population


Select Location, MAX(total_deaths) as TotalDeathCount
From dbo.CovidDeaths
--WHERE Location like '%states%'
WHERE continent is not null
GROUP BY Location
ORDER By TotalDeathCount DESC


-- Showing continents with the highest death count


Select continent, MAX(total_deaths) as TotalDeathCount
From dbo.CovidDeaths
--WHERE Location like '%states%'
WHERE continent is not null
GROUP BY continent
ORDER By TotalDeathCount DESC


-- GLOBAL NUMBERS


Select date, SUM(cast(new_cases as int)) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, 
SUM(cast(new_deaths as float))/NULLIF(SUM(cast(new_cases as float)),0)*100 as DeathPercentage
From dbo.CovidDeaths
--WHERE Location like '%states%'
WHERE continent is not null
GROUP By Date
ORDER By 1,2


-- Looking at Total Population vs Vaccinations


SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(Cast(vac.new_vaccinations as bigint)) OVER (Partition by dea.location Order by dea.location, dea.date) AS RollingVaccinations
--, (RollingVaccinations/population)*100
FROM CovidDeaths dea
JOIN CovidVaccinations vac
	On dea.location=vac.location
	and dea.date=vac.date
Where dea.continent is not null
Order By 2,3


-- USE CTE


With PopvsVac (Continent, Location, Date, Population, New_Vaccinations, RollingVaccinations)
as
(
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(Cast(vac.new_vaccinations as bigint)) OVER (Partition by dea.location Order by dea.location, dea.date) AS RollingVaccinations
--, (RollingVaccinations/population)*100
FROM CovidDeaths dea
JOIN CovidVaccinations vac
	On dea.location=vac.location
	and dea.date=vac.date
Where dea.continent is not null
--Order By 2,3
)
Select*, (RollingVaccinations/Population)*100 AS TotalVaccinations
FROM PopvsVac


-- TEMP TABLE


Drop Table if Exists #PercentPopulationVaccinated
Create Table #PercentPopulationVaccinated
(
Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population numeric,
New_vaccinations numeric,
RollingVaccinations numeric
)

Insert into #PercentPopulationVaccinated
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(Cast(vac.new_vaccinations as bigint)) OVER (Partition by dea.location Order by dea.location, dea.date) AS RollingVaccinations
--, (RollingVaccinations/population)*100
FROM CovidDeaths dea
JOIN CovidVaccinations vac
	On dea.location=vac.location
	and dea.date=vac.date
Where dea.continent is not null
--Order By 2,3
Select*, (RollingVaccinations/Population)*100 AS TotalVaccinations
FROM #PercentPopulationVaccinated


-- Creating View to store data for later visualizations


Create View PercentPolulationVaccinated as
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(Cast(vac.new_vaccinations as bigint)) OVER (Partition by dea.location Order by dea.location, dea.date) AS RollingVaccinations
--, (RollingVaccinations/population)*100
FROM CovidDeaths dea
JOIN CovidVaccinations vac
	On dea.location=vac.location
	and dea.date=vac.date
Where dea.continent is not null
--Order By 2,3

Create View DeathPercentage as
Select date, SUM(cast(new_cases as int)) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, 
SUM(cast(new_deaths as float))/NULLIF(SUM(cast(new_cases as float)),0)*100 as DeathPercentage
From dbo.CovidDeaths
--WHERE Location like '%states%'
WHERE continent is not null
GROUP By Date
--ORDER By 1,2

Create View US_DeathPercentage as
Select Location, date, total_cases, total_deaths,
(CONVERT(float,total_deaths)/NULLIF(CONVERT(float,total_cases),0))*100 AS DeathPercentage
From dbo.CovidDeaths
WHERE Location like '%states%'
--ORDER By 1,2 DESC

Create View PercentPopulationInfected as
Select Location, population, MAX(total_cases) as HighestInfectionCount,
MAX((CONVERT(float,total_cases)/NULLIF(CONVERT(float,population),0)))*100 AS PercentPopulationInfected
From dbo.CovidDeaths
--WHERE Location like '%states%'
WHERE continent is not null
GROUP BY Location, Population
--ORDER By 4 DESC

Create View TotalDeathCount as
Select Location, MAX(total_deaths) as TotalDeathCount
From dbo.CovidDeaths
--WHERE Location like '%states%'
WHERE continent is not null
GROUP BY Location
--ORDER By TotalDeathCount DESC
